{{ config(
	post_hook="grant all privileges on {{ this }} to {{ var('snowflake_user_grant_privileges') }}")
}}

select 
	nvl(mc.account_external_id_map_vod__c,'') as account_external_id_map,
	nvl(mc.account_vod__c,'') as account_id,
	nvl(mc.call_vod__c,'') as call_id,
	nvl(mc.city_vod__c,'') as city,
	nvl(mc.client_name_vod__c,'') as client_name,
	nvl(mc.client_os_vod__c,'') as client_os,
	nvl(mc.client_type_vod__c,'') as client_type,
	nvl(mc.clm_location_latitude_vod__c,'') as clm_location_latitude,
	nvl(mc.clm_location_longitude_vod__c,'') as clm_location_longitude,
	nvl(mc.clm_location_services_status_vod__c,'') as clm_location_services_status,
	nvl(mc.color_vod__c,'') as color,
	nvl(mc.connectionreceivedid,'') as connectionreceivedid,
	nvl(mc.connectionsentid,'') as connectionsentid,
	nvl(mc.country_vod__c,'') as country,
	nvl(mc.createdbyid,'') as createdbyid,    
	case when mc.createddate = '' then null else TO_TIMESTAMP(mc.createddate,'YYYYMMDD HH24:MI:SS') END::datetime as createddate,
	nvl(mc.currencyisocode,'') as currencyisocode,
	nvl(mc.debug_vod__c,'') as debug,
	nvl(mc.detail_group_vod__c,'') as detail_group,
	nvl(mc.device_vod__c,'') as device,
	nvl(mc.em_event_vod__c,'') as em_event,
	nvl(mc.event_attendee_vod__c,'') as event_attendee,
	nvl(mc.icon_vod__c,'') as icon_vod,
	nvl(mc.id,'') as multichannel_activity_id,
	nvl(mc.ip_address_vod__c,'') as ip_address,
	nvl(mc.isdeleted,'') as isdeleted,
	nvl(mc.islocked,'') as islocked,
	nvl(mc.jj_account_cods_id__c,'') as account_cods_id,
	nvl(mc.jj_attendance_record__c,'') as attendance_record,
	nvl(mc.jj_mail__c,'') as mail_id,
	case when (Position(chr(92) || chr(92), mc.jj_mail_url__c) > 0) or Position(chr(124) || chr(34), mc.jj_mail_url__c) > 0 or Position(chr(92) || chr(124), mc.jj_mail_url__c) > 0 or Position(chr(92) || chr(34), mc.jj_mail_url__c) > 0
		then replace(replace(replace(replace(mc.jj_mail_url__c, chr(92) || chr(92), chr(92)), chr(124) || chr(34), chr(34)), chr(92) || chr(124), chr(124)), chr(92) || chr(34), chr(34))
		else nvl(mc.jj_mail_url__c,'') 
	end as mail_url,
	nvl(mc.jj_non_mcpoa_interaction__c,'') as non_mcpoa_interaction,
	nvl(mc.jj_record_type__c,'') as record_type,
	nvl(mc.jj_unique_website_login__c,'') as unique_website_login,
	nvl(mc.lastmodifiedbyid,'') as lastmodifiedbyid,    
	case when mc.lastmodifieddate = '' then null else TO_TIMESTAMP(mc.lastmodifieddate,'YYYYMMDD HH24:MI:SS') END::datetime as lastmodifieddate,
	case when mc.lastreferenceddate = '' then null else TO_TIMESTAMP(mc.lastreferenceddate,'YYYYMMDD HH24:MI:SS') END::datetime as lastreferenceddate,
	case when mc.lastvieweddate = '' then null else TO_TIMESTAMP(mc.lastvieweddate,'YYYYMMDD HH24:MI:SS') END::datetime as lastvieweddate,
	nvl(mc.mayedit,'') as mayedit,
	nvl(mc.mcd_primary_key_vod__c,'') as mcd_primary_key,
	nvl(mc.media_preview_vod__c,'') as media_preview,
	nvl(mc.medical_event_vod__c,'') as medical_event,
	nvl(mc.mobile_id_vod__c,'') as mobile_id,
	nvl(mc.multichannel_activity_vod__c,'') as multichannel_activity,
	nvl(mc.name,'') as name,
	nvl(mc.organizer_vod__c,'') as organizer,
	nvl(mc.ownerid,'') as ownerid,
	nvl(mc.product_vod__c,'') as product_id,
	nvl(mc.record_type_name_vod__c,'') as record_type_name,
	nvl(mc.recordtypeid,'') as recordtypeid,
	nvl(mc.referring_site_vod__c,'') as referring_site,
	nvl(mc.region_vod__c,'') as region,
	nvl(mc.saved_for_later_vod__c,'') as saved_for_later,
	nvl(mc.sent_email_vod__c,'') as sent_email,
	nvl(mc.sent_message_external_id_vod__c,'') as sent_message_external_id,
	nvl(mc.sent_message_vod__c,'') as sent_message,
	nvl(mc.session_id_vod__c,'') as session_id,
	nvl(mc.site_vod__c,'') as site,    
	case when mc.start_datetime_vod__c = '' then null else TO_TIMESTAMP(mc.start_datetime_vod__c,'YYYYMMDD HH24:MI:SS') END::datetime as start_datetime,
	case when mc.systemmodstamp = '' then null else TO_TIMESTAMP(mc.systemmodstamp,'YYYYMMDD HH24:MI:SS') END::datetime as systemmodstamp,
	nvl(mc.territory_vod__c,'') as territory,
	nvl(mc.total_duration_vod__c,'') as total_duration,
	nvl(mc.training_vod__c,'') as training,
	case when (Position(chr(92) || chr(92), mc.url_vod__c) > 0) or Position(chr(124) || chr(34), mc.url_vod__c) > 0 or Position(chr(92) || chr(124), mc.url_vod__c) > 0 or Position(chr(92) || chr(34), mc.url_vod__c) > 0
		then replace(replace(replace(replace(mc.url_vod__c, chr(92) || chr(92), chr(92)), chr(124) || chr(34), chr(34)), chr(92) || chr(124), chr(124)), chr(92) || chr(34), chr(34))
		else nvl(mc.url_vod__c,'')
	end as url,
	nvl(mc.user_agent_vod__c,'') as user_agent,
	nvl(mc.vexternal_id_vod__c,'') as vexternal_id,
	nvl(mc.viewport_height_vod__c,'') as viewport_height,
	nvl(mc.viewport_width_vod__c,'') as viewport_width
from {{ source('raw', 'mc_multichannel_activity') }} as mc